#include<stdio.h>

int main() {
    int n = 3; // number of processes
    int pid[] = {0, 1, 2}; // process ids
    int burst_time[] = {2, 4, 8}; // burst times
    int arrival_time[] = {0, 0, 0}; // arrival times
    int waiting_time[n], turnaround_time[n], completion_time[n];
    float avg_waiting_time = 0, avg_turnaround_time = 0;

    // calculate completion times for each process
    int current_time = 0;
    for (int i = 0; i < n; i++) {
        if (i == 0) {
            completion_time[i] = burst_time[i];
        } else {
            completion_time[i] = completion_time[i-1] + burst_time[i];
        }
        waiting_time[i] = current_time - arrival_time[i];
        turnaround_time[i] = completion_time[i] - arrival_time[i];
        current_time = completion_time[i];
    }

    // calculate average waiting time and average turnaround time
    for (int i = 0; i < n; i++) {
        avg_waiting_time += waiting_time[i];
        avg_turnaround_time += turnaround_time[i];
    }
    avg_waiting_time /= n;
    avg_turnaround_time /= n;

    // print the results
    printf("Process\tBurst Time\tArrival Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", pid[i], burst_time[i], arrival_time[i], waiting_time[i], turnaround_time[i]);
    }
    printf("Average Waiting Time: %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time: %.2f\n", avg_turnaround_time);

    return 0;
}
