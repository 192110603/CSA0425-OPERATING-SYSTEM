#include<stdio.h>
#include<stdlib.h>

// Struct to store process details
struct process {
    int burst_time;
    int completion_time;
    int waiting_time;
    int turnaround_time;
};

// Function to perform Non-Preemptive Shortest-Job-First scheduling
void SJF_scheduling(struct process *p, int n) {
    // Sort processes based on burst time (ascending order)
    for(int i=0; i<n-1; i++) {
        for(int j=0; j<n-i-1; j++) {
            if(p[j].burst_time > p[j+1].burst_time) {
                struct process temp = p[j];
                p[j] = p[j+1];
                p[j+1] = temp;
            }
        }
    }

    // Calculate completion time for each process
    int current_time = 0;
    for(int i=0; i<n; i++) {
        current_time += p[i].burst_time;
        p[i].completion_time = current_time;
    }

    // Calculate waiting time and turnaround time for each process
    for(int i=0; i<n; i++) {
        p[i].turnaround_time = p[i].completion_time;
        p[i].waiting_time = p[i].turnaround_time - p[i].burst_time;
    }
}

int main() {
    // Initialize process details
    struct process p[] = {
        {6, 0, 0, 0},
        {8, 0, 0, 0},
        {7, 0, 0, 0},
        {3, 0, 0, 0},
    };
    int n = sizeof(p) / sizeof(p[0]);

    // Perform SJF scheduling
    SJF_scheduling(p, n);

    // Calculate average waiting time and average turnaround time
    float avg_waiting_time = 0.0;
    float avg_turnaround_time = 0.0;
    for(int i=0; i<n; i++) {
        avg_waiting_time += p[i].waiting_time;
        avg_turnaround_time += p[i].turnaround_time;
    }
    avg_waiting_time /= n;
    avg_turnaround_time /= n;

    // Print process details and average times
    printf("Process\tBurst Time\tCompletion Time\tWaiting Time\tTurnaround Time\n");
    for(int i=0; i<n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n", i+1, p[i].burst_time, p[i].completion_time, p[i].waiting_time, p[i].turnaround_time);
    }
    printf("Average Waiting Time = %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time = %.2f\n", avg_turnaround_time);

    return 0;
}
